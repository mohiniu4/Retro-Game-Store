// <auto-generated />
using System;
using GamesApp.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStoreApp.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250403041204_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameStoreApp.Entities.Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShippingInfoShippingId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShippingInfoShippingId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Zela 2D Adventure",
                            Genre = "Action",
                            Name = "Zelda Minish Cap",
                            Platform = "Gameboy Advance",
                            Price = 29.99m,
                            ReleaseDate = new DateTime(2004, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "Pokemon Catch Them ALL",
                            Genre = "Adventure",
                            Name = "Pokemon Emerald",
                            Platform = "Gameboy Advance",
                            Price = 49.99m,
                            ReleaseDate = new DateTime(2002, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stock = 50
                        });
                });

            modelBuilder.Entity("GameStoreApp.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("BillingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsShipped")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            GameId = 1,
                            IsShipped = false,
                            OrderDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            TotalAmount = 0m,
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            GameId = 2,
                            IsShipped = false,
                            OrderDate = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 2,
                            TotalAmount = 0m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("GameStoreApp.Entities.Rewards", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RewardId");

                    b.ToTable("Rewards");

                    b.HasData(
                        new
                        {
                            RewardId = 1,
                            IsActive = false,
                            Points = 100,
                            UserId = 1
                        },
                        new
                        {
                            RewardId = 2,
                            IsActive = false,
                            Points = 200,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("GameStoreApp.Entities.ShippingInfo", b =>
                {
                    b.Property<int>("ShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsShipped")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShippingId");

                    b.ToTable("Shippings");

                    b.HasData(
                        new
                        {
                            ShippingId = 1,
                            Address = "123 Main St",
                            IsShipped = false,
                            OrderId = 1,
                            ShippedDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ShippingId = 2,
                            Address = "456 Elm St",
                            IsShipped = false,
                            OrderId = 2,
                            ShippedDate = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GameStoreApp.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("OrderId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kat@example.com",
                            UserName = "Kat"
                        },
                        new
                        {
                            UserId = 2,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Nick@example.com",
                            UserName = "Nick"
                        });
                });

            modelBuilder.Entity("RewardsUser", b =>
                {
                    b.Property<int>("RewardsRewardId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("RewardsRewardId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("RewardsUser");
                });

            modelBuilder.Entity("ShippingInfoUser", b =>
                {
                    b.Property<int>("ShippingInfosShippingId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("ShippingInfosShippingId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("ShippingInfoUser");
                });

            modelBuilder.Entity("GameStoreApp.Entities.Games", b =>
                {
                    b.HasOne("GameStoreApp.Entities.Order", null)
                        .WithMany("Games")
                        .HasForeignKey("OrderId");

                    b.HasOne("GameStoreApp.Entities.ShippingInfo", null)
                        .WithMany("Games")
                        .HasForeignKey("ShippingInfoShippingId");
                });

            modelBuilder.Entity("GameStoreApp.Entities.User", b =>
                {
                    b.HasOne("GameStoreApp.Entities.Order", null)
                        .WithMany("Users")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("RewardsUser", b =>
                {
                    b.HasOne("GameStoreApp.Entities.Rewards", null)
                        .WithMany()
                        .HasForeignKey("RewardsRewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStoreApp.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShippingInfoUser", b =>
                {
                    b.HasOne("GameStoreApp.Entities.ShippingInfo", null)
                        .WithMany()
                        .HasForeignKey("ShippingInfosShippingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStoreApp.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameStoreApp.Entities.Order", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("GameStoreApp.Entities.ShippingInfo", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
